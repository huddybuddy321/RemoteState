"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[625],{28778:e=>{e.exports=JSON.parse('{"functions":[{"name":"Set","desc":"Set value in state.\\n\\n\\n```lua\\nGameState:Set(\\"Status\\", \\"InGame\\")\\n```","params":[{"name":"key","desc":"","lua_type":"any"},{"name":"value","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":176,"path":"src/RemoteStateServer.lua"}},{"name":"SetState","desc":"Set multiple values in state.\\n\\n\\n```lua\\nGameState:SetState({\\n    Status = \\"InGame\\",\\n    Gamemode = \\"Swordfight\\"\\n})\\n```","params":[{"name":"newData","desc":"","lua_type":"array"}],"returns":[],"function_type":"method","source":{"line":208,"path":"src/RemoteStateServer.lua"}},{"name":"Increment","desc":"Increment a value in state.\\n\\n\\n```lua\\nlocal pointsAvailable = GameState:Increment(\\"PointsAvailable\\", 69)\\n```","params":[{"name":"key","desc":"","lua_type":"any"},{"name":"increment","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":243,"path":"src/RemoteStateServer.lua"}},{"name":"Decrement","desc":"Decrement a value in state.\\n\\n\\n```lua\\nlocal pointsAvailable = GameState:Decrement(\\"PointsAvailable\\", 69)\\n```","params":[{"name":"key","desc":"","lua_type":"any"},{"name":"decrement","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":262,"path":"src/RemoteStateServer.lua"}},{"name":"Toggle","desc":"Toggle a value in state.\\n\\n\\n```lua\\nlocal isPlaying = GameState:Toggle(\\"Playing\\")\\n```","params":[{"name":"key","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":280,"path":"src/RemoteStateServer.lua"}},{"name":"Get","desc":"Get value from state.\\n\\n\\n```lua\\nlocal gameStatus = GameState:Get(\\"Status\\")\\nprint(\\"The current game status is \\" .. gameStatus)\\n```","params":[{"name":"key","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":303,"path":"src/RemoteStateServer.lua"}},{"name":"GetState","desc":"Get all values from state.\\n\\n\\n```lua\\nlocal gameData = GameState:GetState()\\nprint(gameData)\\n```","params":[],"returns":[{"desc":"","lua_type":"array"}],"function_type":"method","source":{"line":328,"path":"src/RemoteStateServer.lua"}},{"name":"GetChangedSignal","desc":"Get the changed signal of a value within a state.\\n\\n\\n```lua\\nGameState:GetChangedSignal(\\"Status\\"):Connect(function(status, oldStatus, key)\\n    print(\\"The game\'s new status is \\" .. status)\\nend)\\n```","params":[{"name":"key","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"method","source":{"line":358,"path":"src/RemoteStateServer.lua"}},{"name":"Reset","desc":"Reset the state to its initial data.\\n\\n\\n```lua\\nwait(30)\\nprint(\\"Game over!\\")\\nGameState:Reset()\\n```","params":[],"returns":[],"function_type":"method","source":{"line":379,"path":"src/RemoteStateServer.lua"}},{"name":"Destroy","desc":"Disconnects all connections to signals within state.\\n\\n:::note\\n`ClientState:Destroy()` will be called on the given state.\\n:::","params":[],"returns":[],"function_type":"method","source":{"line":414,"path":"src/RemoteStateServer.lua"}}],"properties":[{"name":"Changed","desc":"```lua\\nlocal GameState = RemoteState.GetState(\\"Game\\")\\nGameState.Changed:Connect(function(key, newValue, oldValue)\\n    print(key .. \\" was changed\\")\\n    print(newValue .. \\" is the new value\\")\\n    print(oldValue .. \\" was the old value\\")\\nend)\\n```","lua_type":"Signal","source":{"line":68,"path":"src/RemoteStateServer.lua"}}],"types":[],"name":"ServerState","desc":"ServerState.","source":{"line":53,"path":"src/RemoteStateServer.lua"}}')}}]);